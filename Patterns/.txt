Singleton - порождающий паттерн обеспечивающйи единственность и доступность

Единственность: 
 Есть один один обьект данного класса
 Обьект только один, нет возможности создать второй обьект
 Ленивость обьект создается при первом обращении
Доступность:
 Все части программы могут получить доступ к обьекту
 Гарантируется что эти части получают доступ к одному и тому же обьекту

Примеры:
 генератор случайных чисел
 логгер
 подключение к БД

Strategy

Паттерн позволяющий реализовывать одновременно несколько алгоритмов (версий)

а) переключатся между ними
б) выполнить все и выполнить оптимальный


Декоратор - структурный паттерн  


Фабрики - шаблоны задачей которых есть делегирование задач создания обьектов

Фабрика - класс обьект который создает обьекты других классов

Фабрика (абстрактная) - для задач содания связанных обьектов

Фабричный метод - перенос задач создания обьектов в сами обьекты

Абстрактныая фабрика - фабрика фабрик
Простая фабрика создает конкретные обьекты
Если конкретные обьекты связаны, то переключение на новую связку это использование новой фабрики
Абстрактная фабрика - фабрика создающая конкретную фабрику



Наблюдатель (observer) - паттерн позволяющий подписаться на события и получать уведомления об их происхождении

Есть два вида обьектов :

1) подписчики
2) получаатели


Builder - порождающий паттерн создающий обьекты по шаблону
используется для производства обьектов у который много различных настроек
противопоставляется антипаттерну "телескоп" (new object(int par1,int par2, string par3, .... int parN))


создается Builder и задается настройки для него
builder = new();


builder.SetPar1(2123);
builder.SetPar5(2127);
builder.SetPar6(2128);

builder.Build();
obj = new (builder);


Мост - структурный шаблон заменяющий наследование на агрегацию


1 Без паттерна есть класс Figure и его наследники Rectangle : Figure и Circle : Figure
  появляется необходимость рисовать фигуры с контуром и заполнееные RectangleStroke RectangleFill CircleStroke CircleFill RectanleFillStroke CircleFillStroke

2 С паттерном - создаем фигуру как контейнер, а в ней коллекцию компонент


Компоновщик - обьединение составных обьектов на равне с одиночным
Возможность в качестве елемента использовать комплексный набор

Похож на декоратор но декоратор одномерный, компоновщик древовидный
Так же похож на декоратор тем что не рекомендуется для фундамента проекта,
а стоит использовать для расширения проекта
	

Состояние - используется для реализации приложений имеющий разные режимы работы (состояния)

Например игра
Состояние игра
Состояние пауза
Состояние меню

Без паттерна - switch
С паттерном - (два) класса реализующие поведение в разных состояниях
один из них является текущим








